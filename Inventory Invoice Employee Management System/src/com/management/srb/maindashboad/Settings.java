/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.management.srb.maindashboad;

import com.management.srb.util.Password;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URISyntaxException;
import java.security.CodeSource;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Avishka
 */
public class Settings extends javax.swing.JPanel {

    JpanelLoader jpload = new JpanelLoader();

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    String imageFilePath = null;
    String imageFileName;
    InputStream inputstream;
        String path = null;
    String filename;
    //encryption
     String saltValue = null;
 String secureValue= null;

    /**
     * Creates new form Settings
     */
    public Settings() {
        initComponents();
        login_user.setVisible(false);
        backupRestore.setVisible(false);
        Settingsmain.setVisible(true);

        admin_table_load();
        user_table_load();
    }

    private void encrypt(){
        String myPassword = this.loginpasswordtxt.getText();
        
        // Generate Salt. The generated value can be stored in DB. 
        String salt = Password.getSalt(30);
        
        // Protect user's password. The generated value can be stored in DB.
        String mySecurePassword = Password.generateSecurePassword(myPassword, salt);
        
        
                this.saltValue = salt;
        this.secureValue = mySecurePassword;
        // Print out protected password 
        System.out.println("My secure password = " + mySecurePassword);
        System.out.println("Salt value = " + salt);
        

    }
    
    private void decrypt(){
        // User provided password to validate
        String providedPassword = this.loginpasswordtxt.getText();
                
        // Encrypted and Base64 encoded password read from database
        String securePassword = this.secureValue;
        
        // Salt value stored in database 
        String salt = this.saltValue;
        
        boolean passwordMatch = Password.verifyUserPassword(providedPassword, securePassword, salt);
        
        if(passwordMatch) 
        {
            System.out.println("Provided user password " + providedPassword + " is correct.");
        } else {
            System.out.println("Provided password is incorrect");
        }
    }
    
    
    
    
    public void admin_table_load() {

        try {

            String sql = "SELECT Id,User_Name,Contact_Number,User_Type,Designation,Dp,salt,secure FROM login WHERE User_Type='Admin'";
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
            pst = (PreparedStatement) con.prepareStatement(sql);
            rs = pst.executeQuery();
            AdminTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());

        }
    }


    public void user_table_load() {

        try {

            String sqll = "SELECT Id,User_Name,Contact_Number,User_Type,Designation,Dp,salt,secure FROM login WHERE User_Type='User'";
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
            pst = (PreparedStatement) con.prepareStatement(sqll);
            rs = pst.executeQuery();
            UserTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Settingsmain = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        logincontrol = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        backup = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        backupRestore = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnBackup = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        btnRestore = new javax.swing.JButton();
        header5 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnGoBack = new javax.swing.JButton();
        login_user = new javax.swing.JPanel();
        loginidtxt = new javax.swing.JTextField();
        loginidlbl = new javax.swing.JLabel();
        loginnamelbl = new javax.swing.JLabel();
        loginnametxt = new javax.swing.JTextField();
        loginpasslbl = new javax.swing.JLabel();
        loginconatctlbl = new javax.swing.JLabel();
        logincontact_numbertxt = new javax.swing.JTextField();
        loginadd = new javax.swing.JButton();
        loginupadate = new javax.swing.JButton();
        loginremove = new javax.swing.JButton();
        loginusertypelbl = new javax.swing.JLabel();
        usertypeComboBox = new javax.swing.JComboBox<>();
        logindesignationtxt = new javax.swing.JTextField();
        logindesignationlbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AdminTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        header6 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        dplbl = new javax.swing.JLabel();
        upload = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        btnGoBack1 = new javax.swing.JButton();
        loginpasswordtxt = new javax.swing.JPasswordField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Settingsmain.setBackground(new java.awt.Color(200, 210, 255));
        Settingsmain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Settingsmain.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 144, 170, 20));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 153));
        jLabel11.setText("Welcome");
        Settingsmain.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/SR test.png"))); // NOI18N
        Settingsmain.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 150, 180));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel14.setText("Controll Panel");
        Settingsmain.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 170, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/information.png"))); // NOI18N
        jLabel15.setToolTipText("");
        Settingsmain.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(176, 167, -1, -1));

        logincontrol.setBackground(new java.awt.Color(255, 255, 255));
        logincontrol.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(51, 51, 51)));
        logincontrol.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logincontrol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logincontrolMouseClicked(evt);
            }
        });
        logincontrol.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logincontrol.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 204, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Login Control ");
        logincontrol.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 130, -1, 20));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/user_id(2).png"))); // NOI18N
        logincontrol.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 80, 80));

        Settingsmain.add(logincontrol, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 235, 210, 170));

        backup.setBackground(new java.awt.Color(255, 255, 255));
        backup.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(51, 51, 51)));
        backup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backupMouseClicked(evt);
            }
        });
        backup.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backup.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("System Backup & Restore");
        backup.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/backup_refresh(1).png"))); // NOI18N
        backup.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 70, 80));

        Settingsmain.add(backup, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 235, 210, 170));

        jSeparator2.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 0, 1, new java.awt.Color(0, 0, 0)));
        Settingsmain.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 112, 620, -1));

        add(Settingsmain, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 700));

        backupRestore.setBackground(new java.awt.Color(200, 210, 255));
        backupRestore.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        backupRestore.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 450, 20));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jButton1.setText("Browse Path");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        backupRestore.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, -1, -1));

        btnBackup.setBackground(new java.awt.Color(102, 255, 255));
        btnBackup.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        btnBackup.setText("Backup");
        btnBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupActionPerformed(evt);
            }
        });
        backupRestore.add(btnBackup, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jTextField2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        backupRestore.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 336, 440, 20));

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jButton3.setText("Browse Path");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        backupRestore.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 335, -1, -1));

        btnRestore.setBackground(new java.awt.Color(102, 255, 255));
        btnRestore.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        btnRestore.setText("Restore");
        btnRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestoreActionPerformed(evt);
            }
        });
        backupRestore.add(btnRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        header5.setBackground(new java.awt.Color(0, 0, 104));
        header5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Backup and Restore");

        javax.swing.GroupLayout header5Layout = new javax.swing.GroupLayout(header5);
        header5.setLayout(header5Layout);
        header5Layout.setHorizontalGroup(
            header5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel45)
                .addContainerGap(660, Short.MAX_VALUE))
        );
        header5Layout.setVerticalGroup(
            header5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        backupRestore.add(header5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Backup");
        backupRestore.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Restore");
        backupRestore.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, -1, -1));
        backupRestore.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 144, 170, 20));
        backupRestore.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 140, 20));

        btnGoBack.setBackground(new java.awt.Color(255, 0, 51));
        btnGoBack.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnGoBack.setForeground(new java.awt.Color(255, 255, 255));
        btnGoBack.setText("Go Back");
        btnGoBack.setBorderPainted(false);
        btnGoBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        backupRestore.add(btnGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 640, 170, 30));

        add(backupRestore, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 700));

        login_user.setBackground(new java.awt.Color(200, 210, 255));
        login_user.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginidtxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        loginidtxt.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                loginidtxtComponentAdded(evt);
            }
        });
        loginidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginidtxtActionPerformed(evt);
            }
        });
        loginidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginidtxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loginidtxtKeyReleased(evt);
            }
        });
        login_user.add(loginidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 170, 20));

        loginidlbl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        loginidlbl.setForeground(new java.awt.Color(51, 51, 51));
        loginidlbl.setText("ID");
        login_user.add(loginidlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        loginnamelbl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        loginnamelbl.setForeground(new java.awt.Color(51, 51, 51));
        loginnamelbl.setText("Name");
        login_user.add(loginnamelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        loginnametxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        loginnametxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        loginnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginnametxtKeyPressed(evt);
            }
        });
        login_user.add(loginnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 170, 20));

        loginpasslbl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        loginpasslbl.setForeground(new java.awt.Color(51, 51, 51));
        loginpasslbl.setText("Password");
        login_user.add(loginpasslbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 80, 20));

        loginconatctlbl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        loginconatctlbl.setForeground(new java.awt.Color(51, 51, 51));
        loginconatctlbl.setText("Contact Number ");
        login_user.add(loginconatctlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 120, 20));

        logincontact_numbertxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        logincontact_numbertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logincontact_numbertxtActionPerformed(evt);
            }
        });
        logincontact_numbertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logincontact_numbertxtKeyPressed(evt);
            }
        });
        login_user.add(logincontact_numbertxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 270, 170, 20));

        loginadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/add.png"))); // NOI18N
        loginadd.setText("Add");
        loginadd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginaddActionPerformed(evt);
            }
        });
        login_user.add(loginadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 610, 110, -1));

        loginupadate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/refresh.png"))); // NOI18N
        loginupadate.setText("Update");
        loginupadate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginupadate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginupadateActionPerformed(evt);
            }
        });
        login_user.add(loginupadate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 610, 110, -1));

        loginremove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/delete.png"))); // NOI18N
        loginremove.setText("Remove");
        loginremove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginremove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginremoveActionPerformed(evt);
            }
        });
        login_user.add(loginremove, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 640, 110, -1));

        loginusertypelbl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        loginusertypelbl.setForeground(new java.awt.Color(51, 51, 51));
        loginusertypelbl.setText("User Type");
        login_user.add(loginusertypelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        usertypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User Type", "Admin", "User" }));
        usertypeComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usertypeComboBoxMouseClicked(evt);
            }
        });
        usertypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usertypeComboBoxActionPerformed(evt);
            }
        });
        login_user.add(usertypeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 140, 20));

        logindesignationtxt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));
        logindesignationtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                logindesignationtxtKeyPressed(evt);
            }
        });
        login_user.add(logindesignationtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 160, 20));

        logindesignationlbl.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        logindesignationlbl.setForeground(new java.awt.Color(51, 51, 51));
        logindesignationlbl.setText("Designation");
        login_user.add(logindesignationlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Admin Permissions");
        login_user.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, -1, -1));

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("User Permissions");
        login_user.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, -1, -1));

        AdminTable.setBackground(new java.awt.Color(122, 204, 255));
        AdminTable.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 204, 204)));
        AdminTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AdminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        AdminTable.setSelectionBackground(new java.awt.Color(102, 40, 204));
        AdminTable.setSelectionForeground(new java.awt.Color(204, 255, 255));
        AdminTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AdminTable);

        login_user.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, -1, 170));

        UserTable.setBackground(new java.awt.Color(122, 204, 255));
        UserTable.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 204, 204)));
        UserTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        UserTable.setSelectionBackground(new java.awt.Color(102, 40, 204));
        UserTable.setSelectionForeground(new java.awt.Color(204, 255, 255));
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(UserTable);

        login_user.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, -1, 280));

        header6.setBackground(new java.awt.Color(0, 0, 104));
        header6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Login User Controller");

        javax.swing.GroupLayout header6Layout = new javax.swing.GroupLayout(header6);
        header6.setLayout(header6Layout);
        header6Layout.setHorizontalGroup(
            header6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        header6Layout.setVerticalGroup(
            header6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        login_user.add(header6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, -1));

        dplbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        login_user.add(dplbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 120, 120));

        upload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/management/srb/icons/file.png"))); // NOI18N
        upload.setText("Upload");
        upload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadMouseClicked(evt);
            }
        });
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });
        login_user.add(upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 570, 90, -1));

        clear.setText("Clear all");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        login_user.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 640, 110, -1));

        btnGoBack1.setBackground(new java.awt.Color(255, 0, 51));
        btnGoBack1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnGoBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnGoBack1.setText("Go Back");
        btnGoBack1.setBorderPainted(false);
        btnGoBack1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGoBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBack1ActionPerformed(evt);
            }
        });
        login_user.add(btnGoBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 640, 170, 30));

        loginpasswordtxt.setText("jPasswordField1");
        loginpasswordtxt.setMaximumSize(new java.awt.Dimension(112, 20));
        loginpasswordtxt.setMinimumSize(new java.awt.Dimension(112, 20));
        login_user.add(loginpasswordtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 170, -1));

        add(login_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestoreActionPerformed
        String dbUserName = "root";// username
        String dbPassword = "";//Password

        String[] restoreCmd = new String[]{"C:\\xampp\\mysql\\bin\\mysql.exe ", "--user=" + dbUserName, "--password=" + dbPassword, "-e", "source " + path};
        Process runtimProcess;
        try {
            runtimProcess = Runtime.getRuntime().exec(restoreCmd);
            int proceCom = runtimProcess.waitFor();

            if (proceCom == 0) {
                jLabel2.setText("Restored Succuss");
            } else {
                jLabel2.setText("Can't Restored");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRestoreActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(this);
        String date = new SimpleDateFormat("yyyy-MM-dd").format(new Date());

        try {
            File f = fc.getSelectedFile();
            path = f.getAbsolutePath();
            path = path.replace('\\', '/');
            path = path + "_" + date + ".sql";
            jTextField1.setText(path);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.showOpenDialog(this);
        try {
            File f = fc.getSelectedFile();
            path = f.getAbsolutePath();
            path = path.replace('\\', '/');

            jTextField2.setText(path);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupActionPerformed
        try {
            ProcessBuilder builder = new ProcessBuilder(
                    "cmd.exe", "/c", "C:\\xampp\\mysql\\bin\\mysqldump.exe --user=root --password= sr_bio_foods > " + path + " && dir");
            builder.redirectErrorStream(true);
            Process p = builder.start();
            BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));
            String line;
            while (true) {
                line = r.readLine();
                if (line == null) {
                    break;
                }
                System.out.println(line);
            }
        } catch (IOException ex) {
            Logger.getLogger(Settings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBackupActionPerformed

    private void loginidtxtComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_loginidtxtComponentAdded

    }//GEN-LAST:event_loginidtxtComponentAdded

    private void loginidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginidtxtActionPerformed

    private void loginidtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginidtxtKeyPressed
        loginidtxt.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_loginidtxtKeyPressed

    private void loginidtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginidtxtKeyReleased
        String fullname = null;
        String fname = null;
        String lname = null;
        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
            String sql = "SELECT First_Name,Last_Name,NIC_No,Contact_No,Designation FROM employee WHERE EmpNo='" + loginidtxt.getText() + "' ";
            pst = (PreparedStatement) con.prepareStatement(sql);
            rs = pst.executeQuery();

            if (rs.next()) {

                fname = (rs.getString("First_Name"));
                lname = (rs.getString("Last_Name"));
                fullname = (fname + " " + lname);
                loginnametxt.setText(fullname);
                loginpasswordtxt.setText(rs.getString("NIC_No"));
      //loginpasswordtxt.setText("");
                logincontact_numbertxt.setText(rs.getString("Contact_No"));
                logindesignationtxt.setText(rs.getString("Designation"));

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_loginidtxtKeyReleased

    private void loginnametxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginnametxtKeyPressed
        loginnametxt.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_loginnametxtKeyPressed

    private void logincontact_numbertxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logincontact_numbertxtKeyPressed
        logincontact_numbertxt.setBackground(new Color(255, 255, 255));
        String phoneNumber = logincontact_numbertxt.getText();

        int length = phoneNumber.length();
        char c = evt.getKeyChar();

        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 10) {
                logincontact_numbertxt.setEditable(true);

            } else {
                logincontact_numbertxt.setEditable(false);
            }
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                logincontact_numbertxt.setEditable(true);

            } else {
                logincontact_numbertxt.setEditable(false);
            }

        }
        loginidtxt.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_logincontact_numbertxtKeyPressed

    private void loginaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginaddActionPerformed
        encrypt();
        if (usertypeComboBox.getSelectedItem().equals("Admin")) {

            if (loginidtxt.getText().isEmpty()) {
                loginidtxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "The ID field is empty !!");
            } else if (loginnametxt.getText().isEmpty()) {
                loginnametxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "The User field is empty !!");
            } else if (loginpasswordtxt.getText().isEmpty()) {
                loginpasswordtxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "The Password field is empty !!");
            } else if (logincontact_numbertxt.getText().isEmpty()) {
                logincontact_numbertxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Contact Number field is empty !!");
            } else if (usertypeComboBox.getSelectedItem().equals("Select User Type")) {
                usertypeComboBox.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Please selec User type !!");
            } else if (logindesignationtxt.getText().isEmpty()) {
                logindesignationtxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Designation field is empty !!");
            } else if (dplbl.getIcon() == null) {
                upload.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Please upload DP !!");
            } else {
                int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Add !!", "User Add", JOptionPane.YES_NO_OPTION);
                if (opt == 0) {
                    try {

                        inputstream = new FileInputStream(new File(imageFilePath));

                        String query = "INSERT INTO login(Id,User_Name, Password,Contact_Number,User_Type,Designation,DP,salt,secure) VALUES (?,?,?,?,?,?,?,?,?)";
                        con = DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
                        pst = con.prepareStatement(query);
                        pst.setString(1, loginidtxt.getText());
                        pst.setString(2, loginnametxt.getText());
                        pst.setString(3, loginpasswordtxt.getText());
                        pst.setString(4, logincontact_numbertxt.getText());
                        pst.setString(5, String.valueOf(usertypeComboBox.getSelectedItem()));
                        pst.setString(6, logindesignationtxt.getText());
                        pst.setBlob(7, inputstream);
                        pst.setString(8, this.saltValue);
                        pst.setString(9, this.secureValue);
                        pst.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Inserted Successfully");
                        loginidtxt.setText("");
                        loginnametxt.setText("");
                        loginpasswordtxt.setText("");
                        logincontact_numbertxt.setText("");
                        loginpasswordtxt.setText("");
                        usertypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Select User Type", "Admin", "User"}));
                        logindesignationtxt.setText("");
                        dplbl.setIcon(null);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());

                    }
                }
            }
        } else if (usertypeComboBox.getSelectedItem().equals("User")) {

            if (loginidtxt.getText().isEmpty()) {
                loginidtxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "The ID field is empty !!");
            } else if (loginnametxt.getText().isEmpty()) {
                loginnametxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "The User field is empty !!");
            } else if (loginpasswordtxt.getText().isEmpty()) {
                loginpasswordtxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "The Password field is empty !!");
            } else if (logincontact_numbertxt.getText().isEmpty()) {
                logincontact_numbertxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Contact Number field is empty !!");
            } else if (usertypeComboBox.getSelectedItem().equals("Select User Type")) {
                usertypeComboBox.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Please selec User type !!");
            } else if (logindesignationtxt.getText().isEmpty()) {
                logindesignationtxt.setBackground(new Color(255, 0, 51));
                JOptionPane.showMessageDialog(this, "Designation field is empty !!");
            } else {
                int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Add !!", "User Add", JOptionPane.YES_NO_OPTION);
                if (opt == 0) {
                    try {

                       String query = "INSERT INTO login(Id,User_Name, Password,Contact_Number,User_Type,Designation,DP,salt,secure) VALUES (?,?,?,?,?,?,?,?,?)";
                        con = DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
                        pst = con.prepareStatement(query);
                        pst.setString(1, loginidtxt.getText());
                        pst.setString(2, loginnametxt.getText());
                        pst.setString(3, loginpasswordtxt.getText());
                        pst.setString(4, logincontact_numbertxt.getText());
                        pst.setString(5, String.valueOf(usertypeComboBox.getSelectedItem()));
                        pst.setString(6, logindesignationtxt.getText());
                        pst.setBlob(7, inputstream);
                        pst.setString(8, this.saltValue);
                        pst.setString(9, this.secureValue);
                        pst.executeUpdate();

                        pst.executeUpdate();

                        JOptionPane.showMessageDialog(this, "Inserted Successfully");
                        loginidtxt.setText("");
                        loginnametxt.setText("");
                        loginpasswordtxt.setText("");
                        logincontact_numbertxt.setText("");
                        usertypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Select User Type", "Admin", "User"}));
                        logindesignationtxt.setText("");

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());

                    }
                }
            }
        }
        admin_table_load();
        user_table_load();
    }//GEN-LAST:event_loginaddActionPerformed

    private void loginupadateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginupadateActionPerformed
        encrypt();
        if (loginidtxt.getText().isEmpty()) {
            loginidtxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "The ID field is empty !!");
        } else if (loginnametxt.getText().isEmpty()) {
            loginnametxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "The User field is empty !!");
        } else if (loginpasswordtxt.getText().isEmpty()) {
            loginpasswordtxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "The Password field is empty !!");
        } else if (logincontact_numbertxt.getText().isEmpty()) {
            logincontact_numbertxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Contact Number field is empty !!");
        } else if (usertypeComboBox.getSelectedItem().equals("Select User Type")) {
            usertypeComboBox.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Please selec User type !!");
        } else if (logindesignationtxt.getText().isEmpty()) {
            logindesignationtxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Designation field is empty !!");
        } else {
            int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Update !!", "User Update", JOptionPane.YES_NO_OPTION);
            if (opt == 0) {
                if (imageFilePath != (null)) {

                    try {
                        inputstream = new FileInputStream(new File(imageFilePath));

                        String query = "UPDATE login SET DP=? WHERE Id='" + loginidtxt.getText() + "'";
                        con = DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
                        pst = con.prepareStatement(query);
                        pst.setBlob(1, inputstream);

                        pst.executeUpdate();

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());

                    }

                }

                try {

                    String query = "UPDATE login SET User_Name=?,Password=?,Contact_Number=? ,User_Type=?,Designation=?,salt = ?, secure = ? WHERE Id='" + loginidtxt.getText() + "'";
                    con = DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
                    pst = con.prepareStatement(query);
                    pst.setString(1, loginnametxt.getText());
                    pst.setString(2, loginpasswordtxt.getText());
                    pst.setString(3, logincontact_numbertxt.getText());
                    pst.setString(4, String.valueOf(usertypeComboBox.getSelectedItem()));
                    pst.setString(5, logindesignationtxt.getText());
                    pst.setString(6, this.saltValue);
                    pst.setString(7, this.secureValue);

                    pst.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Update Successfully ");
                    loginidtxt.setText("");
                    loginnametxt.setText("");
                    loginpasswordtxt.setText("");
                    logincontact_numbertxt.setText("");
                    usertypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Select User Type", "Admin", "User"}));
                    logindesignationtxt.setText("");
                    dplbl.setIcon(null);

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());

                }

            }
        }
        admin_table_load();
        user_table_load();
    }//GEN-LAST:event_loginupadateActionPerformed

    private void loginremoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginremoveActionPerformed

        if (loginidtxt.getText().isEmpty()) {
            loginidtxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "The ID field is empty !!");
        } else if (loginnametxt.getText().isEmpty()) {
            loginnametxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "The User field is empty !!");
        } else if (loginpasswordtxt.getText().isEmpty()) {
            loginpasswordtxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "The Password field is empty !!");
        } else if (logincontact_numbertxt.getText().isEmpty()) {
            logincontact_numbertxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Contact Number field is empty !!");
        } else if (usertypeComboBox.getSelectedItem().equals("Select User Type")) {
            usertypeComboBox.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Please selec User type !!");
        } else if (logindesignationtxt.getText().isEmpty()) {
            logindesignationtxt.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Designation field is empty !!");
        } else if (dplbl.getIcon() == null) {
            upload.setBackground(new Color(255, 0, 51));
            JOptionPane.showMessageDialog(this, "Please upload DP !!");
        } else {
            int opt = JOptionPane.showConfirmDialog(null, "Are you sure to Delete !!", "Delete", JOptionPane.YES_NO_OPTION);
            if (opt == 0) {
                try {
                    String query = "DELETE FROM login WHERE Id=?";
                    con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
                    pst = con.prepareStatement(query);
                    pst.setString(1, loginidtxt.getText());
                    pst.executeUpdate();

                    JOptionPane.showMessageDialog(this, "User Remove Successfully ");
                    loginidtxt.setText("");
                    loginnametxt.setText("");
                    loginpasswordtxt.setText("");
                    logincontact_numbertxt.setText("");
                    usertypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Select User Type", "Admin", "User"}));
                    logindesignationtxt.setText("");
                    dplbl.setIcon(null);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());

                }

            }
        }
        admin_table_load();
        user_table_load();
    }//GEN-LAST:event_loginremoveActionPerformed

    private void usertypeComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usertypeComboBoxMouseClicked
        usertypeComboBox.setBackground(new Color(255, 255, 255));

    }//GEN-LAST:event_usertypeComboBoxMouseClicked

    private void usertypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usertypeComboBoxActionPerformed
        if (usertypeComboBox.getSelectedItem().equals("Admin")) {
            upload.setEnabled(true);
        } else if (usertypeComboBox.getSelectedItem().equals("User")) {
            upload.setEnabled(false);
        }
    }//GEN-LAST:event_usertypeComboBoxActionPerformed

    private void logindesignationtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_logindesignationtxtKeyPressed
        logindesignationtxt.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_logindesignationtxtKeyPressed

    private void AdminTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminTableMouseClicked

        DefaultTableModel model = (DefaultTableModel) AdminTable.getModel();
        int selectedRowIndex = AdminTable.getSelectedRow();

        loginidtxt.setText(model.getValueAt(selectedRowIndex, 0).toString());
        loginnametxt.setText(model.getValueAt(selectedRowIndex, 1).toString());
     //   loginpasswordtxt.setText(model.getValueAt(selectedRowIndex, ).toString());
        logincontact_numbertxt.setText(model.getValueAt(selectedRowIndex, 2).toString());
        usertypeComboBox.setSelectedItem(model.getValueAt(selectedRowIndex, 3).toString());
        logindesignationtxt.setText(model.getValueAt(selectedRowIndex, 4).toString());

        try {
            String sql = "SELECT DP FROM login where Id='" + loginidtxt.getText() + "' ";
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/sr_bio_foods", "root", "");
            pst = (PreparedStatement) con.prepareStatement(sql);
            rs = (ResultSet) pst.executeQuery();
            if (rs.next()) {

                byte[] img = rs.getBytes("DP");
                ImageIcon proimage = new ImageIcon(img);
                Image im = proimage.getImage();
                Image myImg = im.getScaledInstance(dplbl.getWidth(), dplbl.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);
                dplbl.setIcon(newImage);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_AdminTableMouseClicked

    private void UserTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) UserTable.getModel();
        int selectedRowIndex = UserTable.getSelectedRow();

        loginidtxt.setText(model.getValueAt(selectedRowIndex, 0).toString());
        loginnametxt.setText(model.getValueAt(selectedRowIndex, 1).toString());
  //      loginpasswordtxt.setText(model.getValueAt(selectedRowIndex, 2).toString());
        logincontact_numbertxt.setText(model.getValueAt(selectedRowIndex, 2).toString());
        usertypeComboBox.setSelectedItem(model.getValueAt(selectedRowIndex, 3).toString());
        logindesignationtxt.setText(model.getValueAt(selectedRowIndex, 4).toString());

        dplbl.setIcon(null);
    }//GEN-LAST:event_UserTableMouseClicked

    private void uploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMouseClicked
        upload.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_uploadMouseClicked

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        String currentDirectoryPath = "C:\\Users\\Public\\Pictures\\sample";
        JFileChooser imageFileChooser = new JFileChooser(currentDirectoryPath);
        int imageChooser = imageFileChooser.showOpenDialog(null);
        imageFileChooser.setDialogTitle("Choose Image");

        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Images", "png", "jpg", "jpeg");
        imageFileChooser.setFileFilter(fnef);

        if (imageChooser == JFileChooser.APPROVE_OPTION) {
            File imageFile = imageFileChooser.getSelectedFile();
            imageFilePath = imageFile.getAbsolutePath();
            imageFileName = imageFile.getName();

            ImageIcon upimageIcon = new ImageIcon(imageFilePath);

            Image upimage = upimageIcon.getImage().getScaledInstance(dplbl.getWidth(), dplbl.getHeight(), Image.SCALE_SMOOTH);

            ImageIcon resizedImageIcon = new ImageIcon(upimage);
            dplbl.setIcon(resizedImageIcon);
        }


    }//GEN-LAST:event_uploadActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        loginidtxt.setText("");
        loginnametxt.setText("");
        loginpasswordtxt.setText("");
        logincontact_numbertxt.setText("");
        usertypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Select User Type", "Admin", "User"}));
        logindesignationtxt.setText("");
        dplbl.setIcon(null);
    }//GEN-LAST:event_clearActionPerformed

    private void logincontrolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logincontrolMouseClicked
        login_user.setVisible(true);
        backupRestore.setVisible(false);
        Settingsmain.setVisible(false);


    }//GEN-LAST:event_logincontrolMouseClicked

    private void backupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupMouseClicked
        login_user.setVisible(false);
        backupRestore.setVisible(true);
        Settingsmain.setVisible(false);

    }//GEN-LAST:event_backupMouseClicked

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        login_user.setVisible(false);
        backupRestore.setVisible(false);
        Settingsmain.setVisible(true);

    }//GEN-LAST:event_btnGoBackActionPerformed

    private void btnGoBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBack1ActionPerformed
        login_user.setVisible(false);
        backupRestore.setVisible(false);
        Settingsmain.setVisible(true);

    }//GEN-LAST:event_btnGoBack1ActionPerformed

    private void logincontact_numbertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logincontact_numbertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logincontact_numbertxtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AdminTable;
    private javax.swing.JPanel Settingsmain;
    private javax.swing.JTable UserTable;
    private javax.swing.JPanel backup;
    private javax.swing.JPanel backupRestore;
    private javax.swing.JButton btnBackup;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnGoBack1;
    private javax.swing.JButton btnRestore;
    private javax.swing.JButton clear;
    private javax.swing.JLabel dplbl;
    private javax.swing.JPanel header5;
    private javax.swing.JPanel header6;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel login_user;
    private javax.swing.JButton loginadd;
    private javax.swing.JLabel loginconatctlbl;
    private javax.swing.JTextField logincontact_numbertxt;
    private javax.swing.JPanel logincontrol;
    private javax.swing.JLabel logindesignationlbl;
    private javax.swing.JTextField logindesignationtxt;
    private javax.swing.JLabel loginidlbl;
    private javax.swing.JTextField loginidtxt;
    private javax.swing.JLabel loginnamelbl;
    private javax.swing.JTextField loginnametxt;
    private javax.swing.JLabel loginpasslbl;
    private javax.swing.JPasswordField loginpasswordtxt;
    private javax.swing.JButton loginremove;
    private javax.swing.JButton loginupadate;
    private javax.swing.JLabel loginusertypelbl;
    private javax.swing.JButton upload;
    private javax.swing.JComboBox<String> usertypeComboBox;
    // End of variables declaration//GEN-END:variables
}
